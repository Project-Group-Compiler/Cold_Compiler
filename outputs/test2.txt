Lexical Analysis for tests/test2.cold

Token               Lexeme                                  Line      Column    
--------------------------------------------------------------------------------
INT                 int                                     2         1         
IDENTIFIER          main                                    2         5         
(                   (                                       2         9         
)                   )                                       2         10        
{                   {                                       2         12        
INT                 int                                     4         5         
IDENTIFIER          decimal                                 4         9         
;                   ;                                       4         16        
INT                 int                                     5         5         
IDENTIFIER          number                                  5         9         
;                   ;                                       5         15        
CHAR                char                                    6         5         
IDENTIFIER          binary                                  6         10        
[                   [                                       6         16        
CONSTANT            32                                      6         17        
]                   ]                                       6         19        
;                   ;                                       6         20        
INT                 int                                     7         5         
IDENTIFIER          bit                                     7         9         
=                   =                                       7         13        
CONSTANT            0                                       7         15        
;                   ;                                       7         16        
IDENTIFIER          scanf                                   9         5         
(                   (                                       9         10        
STRING_LITERAL      "%d"                                    9         11        
,                   ,                                       9         15        
&                   &                                       9         17        
IDENTIFIER          decimal                                 9         18        
)                   )                                       9         25        
;                   ;                                       9         26        
IDENTIFIER          number                                  10        5         
=                   =                                       10        12        
IDENTIFIER          decimal                                 10        14        
;                   ;                                       10        21        
WHILE               while                                   11        5         
(                   (                                       11        10        
IDENTIFIER          decimal                                 11        11        
NE_OP               !=                                      11        19        
CONSTANT            0                                       11        22        
)                   )                                       11        23        
{                   {                                       11        24        
IDENTIFIER          binary                                  12        9         
[                   [                                       12        15        
IDENTIFIER          bit                                     12        16        
INC_OP              ++                                      12        19        
]                   ]                                       12        21        
=                   =                                       12        23        
(                   (                                       12        25        
IDENTIFIER          decimal                                 12        26        
%                   %                                       12        34        
CONSTANT            2                                       12        36        
)                   )                                       12        37        
+                   +                                       12        39        
CONSTANT            '0'                                     12        41        
;                   ;                                       12        44        
IDENTIFIER          decimal                                 13        9         
DIV_ASSIGN          /=                                      13        17        
CONSTANT            2                                       13        20        
;                   ;                                       13        21        
}                   }                                       14        5         
IDENTIFIER          printf                                  16        5         
(                   (                                       16        11        
STRING_LITERAL      "Binary representation of %d is:\n"     16        12        
,                   ,                                       16        47        
IDENTIFIER          number                                  16        48        
)                   )                                       16        54        
;                   ;                                       16        55        
FOR                 for                                     17        5         
(                   (                                       17        9         
INT                 int                                     17        10        
IDENTIFIER          i                                       17        14        
=                   =                                       17        16        
IDENTIFIER          bit                                     17        18        
-                   -                                       17        22        
CONSTANT            1                                       17        24        
;                   ;                                       17        25        
IDENTIFIER          i                                       17        27        
GE_OP               >=                                      17        29        
CONSTANT            0                                       17        32        
;                   ;                                       17        33        
IDENTIFIER          i                                       17        35        
DEC_OP              --                                      17        36        
)                   )                                       17        38        
{                   {                                       17        40        
IDENTIFIER          printf                                  18        9         
(                   (                                       18        15        
STRING_LITERAL      "%c"                                    18        16        
,                   ,                                       18        20        
IDENTIFIER          binary                                  18        22        
[                   [                                       18        28        
IDENTIFIER          i                                       18        29        
]                   ]                                       18        30        
)                   )                                       18        31        
;                   ;                                       18        32        
}                   }                                       19        5         
IDENTIFIER          printf                                  20        5         
(                   (                                       20        11        
STRING_LITERAL      "\n"                                    20        12        
)                   )                                       20        16        
;                   ;                                       20        17        
}                   }                                       21        1         
