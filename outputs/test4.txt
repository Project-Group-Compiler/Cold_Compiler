Lexical Analysis for tests/test4.cold

Token               Lexeme                                  Line      Column    
--------------------------------------------------------------------------------
INT                 int                                     1         1         
IDENTIFIER          MAX_NODES                               1         5         
=                   =                                       1         15        
CONSTANT            1000                                    1         17        
;                   ;                                       1         21        
INT                 int                                     2         1         
IDENTIFIER          INF                                     2         5         
=                   =                                       2         9         
CONSTANT            100000000                               2         11        
;                   ;                                       2         20        
INT                 int                                     3         1         
IDENTIFIER          n                                       3         5         
;                   ;                                       3         6         
INT                 int                                     4         1         
IDENTIFIER          e                                       4         5         
;                   ;                                       4         6         
INT                 int                                     5         1         
IDENTIFIER          capacity                                5         5         
[                   [                                       5         13        
IDENTIFIER          MAX_NODES                               5         14        
]                   ]                                       5         23        
[                   [                                       5         24        
IDENTIFIER          MAX_NODES                               5         25        
]                   ]                                       5         34        
;                   ;                                       5         35        
INT                 int                                     6         1         
IDENTIFIER          flow                                    6         5         
[                   [                                       6         9         
IDENTIFIER          MAX_NODES                               6         10        
]                   ]                                       6         19        
[                   [                                       6         20        
IDENTIFIER          MAX_NODES                               6         21        
]                   ]                                       6         30        
;                   ;                                       6         31        
INT                 int                                     7         1         
IDENTIFIER          color                                   7         5         
[                   [                                       7         10        
IDENTIFIER          MAX_NODES                               7         11        
]                   ]                                       7         20        
;                   ;                                       7         21        
INT                 int                                     8         1         
IDENTIFIER          pred                                    8         5         
[                   [                                       8         9         
IDENTIFIER          MAX_NODES                               8         10        
]                   ]                                       8         19        
;                   ;                                       8         20        
INT                 int                                     10        1         
IDENTIFIER          WHITE                                   10        5         
=                   =                                       10        11        
CONSTANT            0                                       10        13        
;                   ;                                       10        14        
INT                 int                                     11        1         
IDENTIFIER          GRAY                                    11        5         
=                   =                                       11        10        
CONSTANT            1                                       11        12        
;                   ;                                       11        13        
INT                 int                                     12        1         
IDENTIFIER          BLACK                                   12        5         
=                   =                                       12        11        
CONSTANT            2                                       12        13        
;                   ;                                       12        14        
INT                 int                                     13        1         
IDENTIFIER          head                                    13        5         
,                   ,                                       13        9         
IDENTIFIER          tail                                    13        11        
;                   ;                                       13        15        
INT                 int                                     14        1         
IDENTIFIER          q                                       14        5         
[                   [                                       14        6         
IDENTIFIER          MAX_NODES                               14        7         
+                   +                                       14        17        
CONSTANT            2                                       14        19        
]                   ]                                       14        20        
;                   ;                                       14        21        
INT                 int                                     16        1         
IDENTIFIER          min                                     16        5         
(                   (                                       16        8         
INT                 int                                     16        9         
IDENTIFIER          x                                       16        13        
,                   ,                                       16        14        
INT                 int                                     16        16        
IDENTIFIER          y                                       16        20        
)                   )                                       16        21        
;                   ;                                       16        22        
VOID                void                                    17        1         
IDENTIFIER          enqueue                                 17        6         
(                   (                                       17        13        
INT                 int                                     17        14        
IDENTIFIER          x                                       17        18        
)                   )                                       17        19        
;                   ;                                       17        20        
INT                 int                                     18        1         
IDENTIFIER          dequeue                                 18        5         
(                   (                                       18        12        
VOID                void                                    18        13        
)                   )                                       18        17        
;                   ;                                       18        18        
INT                 int                                     19        1         
IDENTIFIER          bfs                                     19        5         
(                   (                                       19        8         
INT                 int                                     19        9         
IDENTIFIER          start                                   19        13        
,                   ,                                       19        18        
INT                 int                                     19        20        
IDENTIFIER          target                                  19        24        
)                   )                                       19        30        
;                   ;                                       19        31        
INT                 int                                     20        1         
IDENTIFIER          max_flow                                20        5         
(                   (                                       20        13        
INT                 int                                     20        14        
IDENTIFIER          source                                  20        18        
,                   ,                                       20        24        
INT                 int                                     20        26        
IDENTIFIER          sink                                    20        30        
)                   )                                       20        34        
;                   ;                                       20        35        
INT                 int                                     22        1         
IDENTIFIER          min                                     22        5         
(                   (                                       22        8         
INT                 int                                     22        9         
IDENTIFIER          x                                       22        13        
,                   ,                                       22        14        
INT                 int                                     22        16        
IDENTIFIER          y                                       22        20        
)                   )                                       22        21        
{                   {                                       22        23        
RETURN              return                                  23        5         
IDENTIFIER          x                                       23        12        
<                   <                                       23        14        
IDENTIFIER          y                                       23        16        
?                   ?                                       23        18        
IDENTIFIER          x                                       23        20        
:                   :                                       23        22        
IDENTIFIER          y                                       23        24        
;                   ;                                       23        25        
}                   }                                       24        1         
VOID                void                                    26        1         
IDENTIFIER          enqueue                                 26        6         
(                   (                                       26        13        
INT                 int                                     26        14        
IDENTIFIER          x                                       26        18        
)                   )                                       26        19        
{                   {                                       26        21        
IDENTIFIER          q                                       27        5         
[                   [                                       27        6         
IDENTIFIER          tail                                    27        7         
]                   ]                                       27        11        
=                   =                                       27        13        
IDENTIFIER          x                                       27        15        
;                   ;                                       27        16        
IDENTIFIER          tail                                    28        5         
INC_OP              ++                                      28        9         
;                   ;                                       28        11        
IDENTIFIER          color                                   29        5         
[                   [                                       29        10        
IDENTIFIER          x                                       29        11        
]                   ]                                       29        12        
=                   =                                       29        14        
IDENTIFIER          GRAY                                    29        16        
;                   ;                                       29        20        
}                   }                                       30        1         
INT                 int                                     32        1         
IDENTIFIER          dequeue                                 32        5         
(                   (                                       32        12        
VOID                void                                    32        13        
)                   )                                       32        17        
{                   {                                       32        19        
INT                 int                                     33        5         
IDENTIFIER          x                                       33        9         
=                   =                                       33        11        
IDENTIFIER          q                                       33        13        
[                   [                                       33        14        
IDENTIFIER          head                                    33        15        
]                   ]                                       33        19        
;                   ;                                       33        20        
IDENTIFIER          head                                    34        5         
INC_OP              ++                                      34        9         
;                   ;                                       34        11        
IDENTIFIER          color                                   35        5         
[                   [                                       35        10        
IDENTIFIER          x                                       35        11        
]                   ]                                       35        12        
=                   =                                       35        14        
IDENTIFIER          BLACK                                   35        16        
;                   ;                                       35        21        
RETURN              return                                  36        5         
IDENTIFIER          x                                       36        12        
;                   ;                                       36        13        
}                   }                                       37        1         
INT                 int                                     39        1         
IDENTIFIER          bfs                                     39        5         
(                   (                                       39        8         
INT                 int                                     39        9         
IDENTIFIER          start                                   39        13        
,                   ,                                       39        18        
INT                 int                                     39        20        
IDENTIFIER          target                                  39        24        
)                   )                                       39        30        
{                   {                                       39        32        
INT                 int                                     40        5         
IDENTIFIER          u                                       40        9         
,                   ,                                       40        10        
IDENTIFIER          v                                       40        12        
;                   ;                                       40        13        
IDENTIFIER          head                                    41        5         
=                   =                                       41        10        
IDENTIFIER          tail                                    41        12        
=                   =                                       41        17        
CONSTANT            0                                       41        19        
;                   ;                                       41        20        
FOR                 for                                     43        5         
(                   (                                       43        9         
IDENTIFIER          u                                       43        10        
=                   =                                       43        12        
CONSTANT            0                                       43        14        
;                   ;                                       43        15        
IDENTIFIER          u                                       43        17        
<                   <                                       43        19        
IDENTIFIER          n                                       43        21        
;                   ;                                       43        22        
IDENTIFIER          u                                       43        24        
INC_OP              ++                                      43        25        
)                   )                                       43        27        
{                   {                                       43        29        
IDENTIFIER          color                                   44        9         
[                   [                                       44        14        
IDENTIFIER          u                                       44        15        
]                   ]                                       44        16        
=                   =                                       44        18        
IDENTIFIER          WHITE                                   44        20        
;                   ;                                       44        25        
}                   }                                       45        5         
IDENTIFIER          enqueue                                 47        5         
(                   (                                       47        12        
IDENTIFIER          start                                   47        13        
)                   )                                       47        18        
;                   ;                                       47        19        
IDENTIFIER          pred                                    48        5         
[                   [                                       48        9         
IDENTIFIER          start                                   48        10        
]                   ]                                       48        15        
=                   =                                       48        17        
-                   -                                       48        19        
CONSTANT            1                                       48        20        
;                   ;                                       48        21        
WHILE               while                                   49        5         
(                   (                                       49        11        
IDENTIFIER          head                                    49        12        
NE_OP               !=                                      49        17        
IDENTIFIER          tail                                    49        20        
)                   )                                       49        24        
{                   {                                       49        26        
IDENTIFIER          u                                       50        9         
=                   =                                       50        11        
IDENTIFIER          dequeue                                 50        13        
(                   (                                       50        20        
)                   )                                       50        21        
;                   ;                                       50        22        
FOR                 for                                     51        9         
(                   (                                       51        13        
IDENTIFIER          v                                       51        14        
=                   =                                       51        16        
CONSTANT            0                                       51        18        
;                   ;                                       51        19        
IDENTIFIER          v                                       51        21        
<                   <                                       51        23        
IDENTIFIER          n                                       51        25        
;                   ;                                       51        26        
IDENTIFIER          v                                       51        28        
INC_OP              ++                                      51        29        
)                   )                                       51        31        
{                   {                                       51        33        
IF                  if                                      52        13        
(                   (                                       52        16        
IDENTIFIER          color                                   52        17        
[                   [                                       52        22        
IDENTIFIER          v                                       52        23        
]                   ]                                       52        24        
EQ_OP               ==                                      52        26        
IDENTIFIER          WHITE                                   52        29        
AND_OP              &&                                      52        35        
IDENTIFIER          capacity                                52        38        
[                   [                                       52        46        
IDENTIFIER          u                                       52        47        
]                   ]                                       52        48        
[                   [                                       52        49        
IDENTIFIER          v                                       52        50        
]                   ]                                       52        51        
-                   -                                       52        53        
IDENTIFIER          flow                                    52        55        
[                   [                                       52        59        
IDENTIFIER          u                                       52        60        
]                   ]                                       52        61        
[                   [                                       52        62        
IDENTIFIER          v                                       52        63        
]                   ]                                       52        64        
>                   >                                       52        66        
CONSTANT            0                                       52        68        
)                   )                                       52        69        
{                   {                                       52        71        
IDENTIFIER          enqueue                                 53        17        
(                   (                                       53        24        
IDENTIFIER          v                                       53        25        
)                   )                                       53        26        
;                   ;                                       53        27        
IDENTIFIER          pred                                    54        17        
[                   [                                       54        21        
IDENTIFIER          v                                       54        22        
]                   ]                                       54        23        
=                   =                                       54        25        
IDENTIFIER          u                                       54        27        
;                   ;                                       54        28        
}                   }                                       55        13        
}                   }                                       56        9         
}                   }                                       57        5         
RETURN              return                                  58        5         
IDENTIFIER          color                                   58        12        
[                   [                                       58        17        
IDENTIFIER          target                                  58        18        
]                   ]                                       58        24        
EQ_OP               ==                                      58        26        
IDENTIFIER          BLACK                                   58        29        
;                   ;                                       58        34        
}                   }                                       59        1         
INT                 int                                     61        1         
IDENTIFIER          max_flow                                61        5         
(                   (                                       61        13        
INT                 int                                     61        14        
IDENTIFIER          source                                  61        18        
,                   ,                                       61        24        
INT                 int                                     61        26        
IDENTIFIER          sink                                    61        30        
)                   )                                       61        34        
{                   {                                       61        36        
INT                 int                                     62        5         
IDENTIFIER          i                                       62        9         
,                   ,                                       62        10        
IDENTIFIER          j                                       62        12        
,                   ,                                       62        13        
IDENTIFIER          u                                       62        15        
;                   ;                                       62        16        
INT                 int                                     63        5         
IDENTIFIER          max_flow                                63        9         
=                   =                                       63        18        
CONSTANT            0                                       63        20        
;                   ;                                       63        21        
INT                 int                                     64        5         
IDENTIFIER          increment                               64        9         
=                   =                                       64        19        
IDENTIFIER          INF                                     64        21        
;                   ;                                       64        24        
FOR                 for                                     66        5         
(                   (                                       66        9         
IDENTIFIER          i                                       66        10        
=                   =                                       66        12        
CONSTANT            0                                       66        14        
;                   ;                                       66        15        
IDENTIFIER          i                                       66        17        
<                   <                                       66        19        
IDENTIFIER          n                                       66        21        
;                   ;                                       66        22        
IDENTIFIER          i                                       66        24        
INC_OP              ++                                      66        25        
)                   )                                       66        27        
{                   {                                       66        29        
FOR                 for                                     67        9         
(                   (                                       67        13        
IDENTIFIER          j                                       67        14        
=                   =                                       67        16        
CONSTANT            0                                       67        18        
;                   ;                                       67        19        
IDENTIFIER          j                                       67        21        
<                   <                                       67        23        
IDENTIFIER          n                                       67        25        
;                   ;                                       67        26        
IDENTIFIER          j                                       67        28        
INC_OP              ++                                      67        29        
)                   )                                       67        31        
{                   {                                       67        33        
IDENTIFIER          flow                                    68        13        
[                   [                                       68        17        
IDENTIFIER          i                                       68        18        
]                   ]                                       68        19        
[                   [                                       68        20        
IDENTIFIER          j                                       68        21        
]                   ]                                       68        22        
=                   =                                       68        24        
CONSTANT            0                                       68        26        
;                   ;                                       68        27        
}                   }                                       69        9         
}                   }                                       70        5         
WHILE               while                                   72        5         
(                   (                                       72        11        
IDENTIFIER          bfs                                     72        12        
(                   (                                       72        15        
IDENTIFIER          source                                  72        16        
,                   ,                                       72        22        
IDENTIFIER          sink                                    72        24        
)                   )                                       72        28        
)                   )                                       72        29        
{                   {                                       72        31        
FOR                 for                                     73        9         
(                   (                                       73        13        
IDENTIFIER          u                                       73        14        
=                   =                                       73        16        
IDENTIFIER          n                                       73        18        
-                   -                                       73        20        
CONSTANT            1                                       73        22        
;                   ;                                       73        23        
IDENTIFIER          pred                                    73        25        
[                   [                                       73        29        
IDENTIFIER          u                                       73        30        
]                   ]                                       73        31        
GE_OP               >=                                      73        33        
CONSTANT            0                                       73        36        
;                   ;                                       73        37        
IDENTIFIER          u                                       73        39        
=                   =                                       73        41        
IDENTIFIER          pred                                    73        43        
[                   [                                       73        47        
IDENTIFIER          u                                       73        48        
]                   ]                                       73        49        
)                   )                                       73        50        
{                   {                                       73        52        
IDENTIFIER          increment                               74        13        
=                   =                                       74        23        
IDENTIFIER          min                                     74        25        
(                   (                                       74        28        
IDENTIFIER          increment                               74        29        
,                   ,                                       74        38        
IDENTIFIER          capacity                                74        40        
[                   [                                       74        48        
IDENTIFIER          pred                                    74        49        
[                   [                                       74        53        
IDENTIFIER          u                                       74        54        
]                   ]                                       74        55        
]                   ]                                       74        56        
[                   [                                       74        57        
IDENTIFIER          u                                       74        58        
]                   ]                                       74        59        
-                   -                                       74        61        
IDENTIFIER          flow                                    74        63        
[                   [                                       74        67        
IDENTIFIER          pred                                    74        68        
[                   [                                       74        72        
IDENTIFIER          u                                       74        73        
]                   ]                                       74        74        
]                   ]                                       74        75        
[                   [                                       74        76        
IDENTIFIER          u                                       74        77        
]                   ]                                       74        78        
)                   )                                       74        79        
;                   ;                                       74        80        
}                   }                                       75        9         
FOR                 for                                     77        9         
(                   (                                       77        13        
IDENTIFIER          u                                       77        14        
=                   =                                       77        16        
IDENTIFIER          n                                       77        18        
-                   -                                       77        20        
CONSTANT            1                                       77        22        
;                   ;                                       77        23        
IDENTIFIER          pred                                    77        25        
[                   [                                       77        29        
IDENTIFIER          u                                       77        30        
]                   ]                                       77        31        
GE_OP               >=                                      77        33        
CONSTANT            0                                       77        36        
;                   ;                                       77        37        
IDENTIFIER          u                                       77        39        
=                   =                                       77        41        
IDENTIFIER          pred                                    77        43        
[                   [                                       77        47        
IDENTIFIER          u                                       77        48        
]                   ]                                       77        49        
)                   )                                       77        50        
{                   {                                       77        52        
IDENTIFIER          flow                                    78        13        
[                   [                                       78        17        
IDENTIFIER          pred                                    78        18        
[                   [                                       78        22        
IDENTIFIER          u                                       78        23        
]                   ]                                       78        24        
]                   ]                                       78        25        
[                   [                                       78        26        
IDENTIFIER          u                                       78        27        
]                   ]                                       78        28        
ADD_ASSIGN          +=                                      78        30        
IDENTIFIER          increment                               78        33        
;                   ;                                       78        42        
IDENTIFIER          flow                                    79        13        
[                   [                                       79        17        
IDENTIFIER          u                                       79        18        
]                   ]                                       79        19        
[                   [                                       79        20        
IDENTIFIER          pred                                    79        21        
[                   [                                       79        25        
IDENTIFIER          u                                       79        26        
]                   ]                                       79        27        
]                   ]                                       79        28        
SUB_ASSIGN          -=                                      79        30        
IDENTIFIER          increment                               79        33        
;                   ;                                       79        42        
}                   }                                       80        9         
IDENTIFIER          max_flow                                82        9         
ADD_ASSIGN          +=                                      82        18        
IDENTIFIER          increment                               82        21        
;                   ;                                       82        30        
}                   }                                       83        5         
RETURN              return                                  84        5         
IDENTIFIER          max_flow                                84        12        
;                   ;                                       84        20        
}                   }                                       85        1         
INT                 int                                     87        1         
IDENTIFIER          main                                    87        5         
(                   (                                       87        9         
)                   )                                       87        10        
{                   {                                       87        12        
INT                 int                                     88        5         
IDENTIFIER          i                                       88        9         
,                   ,                                       88        10        
IDENTIFIER          j                                       88        12        
;                   ;                                       88        13        
INT                 int                                     89        5         
IDENTIFIER          s                                       89        9         
=                   =                                       89        11        
CONSTANT            0                                       89        13        
;                   ;                                       89        14        
INT                 int                                     90        5         
IDENTIFIER          t                                       90        9         
=                   =                                       90        11        
IDENTIFIER          n                                       90        13        
-                   -                                       90        15        
CONSTANT            1                                       90        17        
;                   ;                                       90        18        
IDENTIFIER          printf                                  92        5         
(                   (                                       92        11        
STRING_LITERAL      "\nEnter number of nodes and edges: \n" 92        12        
)                   )                                       92        51        
;                   ;                                       92        52        
IDENTIFIER          scanf                                   93        5         
(                   (                                       93        10        
STRING_LITERAL      "%d %d"                                 93        11        
,                   ,                                       93        18        
&                   &                                       93        20        
IDENTIFIER          n                                       93        21        
,                   ,                                       93        22        
&                   &                                       93        24        
IDENTIFIER          e                                       93        25        
)                   )                                       93        26        
;                   ;                                       93        27        
IDENTIFIER          printf                                  95        5         
(                   (                                       95        11        
STRING_LITERAL      "\nEnter the capacity matrix:\n"        95        12        
)                   )                                       95        44        
;                   ;                                       95        45        
FOR                 for                                     96        5         
(                   (                                       96        9         
IDENTIFIER          i                                       96        10        
=                   =                                       96        12        
CONSTANT            0                                       96        14        
;                   ;                                       96        15        
IDENTIFIER          i                                       96        17        
<                   <                                       96        19        
IDENTIFIER          n                                       96        21        
;                   ;                                       96        22        
IDENTIFIER          i                                       96        24        
INC_OP              ++                                      96        25        
)                   )                                       96        27        
{                   {                                       96        29        
FOR                 for                                     97        9         
(                   (                                       97        13        
IDENTIFIER          j                                       97        14        
=                   =                                       97        16        
CONSTANT            0                                       97        18        
;                   ;                                       97        19        
IDENTIFIER          j                                       97        21        
<                   <                                       97        23        
IDENTIFIER          n                                       97        25        
;                   ;                                       97        26        
IDENTIFIER          j                                       97        28        
INC_OP              ++                                      97        29        
)                   )                                       97        31        
{                   {                                       97        33        
IDENTIFIER          scanf                                   98        13        
(                   (                                       98        18        
STRING_LITERAL      "%d"                                    98        19        
,                   ,                                       98        23        
&                   &                                       98        25        
IDENTIFIER          capacity                                98        26        
[                   [                                       98        34        
IDENTIFIER          i                                       98        35        
]                   ]                                       98        36        
[                   [                                       98        37        
IDENTIFIER          j                                       98        38        
]                   ]                                       98        39        
)                   )                                       98        40        
;                   ;                                       98        41        
}                   }                                       99        9         
}                   }                                       100       5         
IDENTIFIER          printf                                  102       5         
(                   (                                       102       11        
STRING_LITERAL      "\nEnter Source(s) and Sink(t): \n"     102       12        
)                   )                                       102       47        
;                   ;                                       102       48        
IDENTIFIER          scanf                                   103       5         
(                   (                                       103       10        
STRING_LITERAL      "%d %d"                                 103       11        
,                   ,                                       103       18        
&                   &                                       103       20        
IDENTIFIER          s                                       103       21        
,                   ,                                       103       22        
&                   &                                       103       24        
IDENTIFIER          t                                       103       25        
)                   )                                       103       26        
;                   ;                                       103       27        
IDENTIFIER          printf                                  105       5         
(                   (                                       105       11        
STRING_LITERAL      "\nMax Flow : %d\n"                     105       12        
,                   ,                                       105       31        
IDENTIFIER          max_flow                                105       33        
(                   (                                       105       41        
IDENTIFIER          s                                       105       42        
,                   ,                                       105       43        
IDENTIFIER          t                                       105       45        
)                   )                                       105       46        
)                   )                                       105       47        
;                   ;                                       105       48        
RETURN              return                                  107       5         
CONSTANT            0                                       107       12        
;                   ;                                       107       13        
}                   }                                       108       1         
