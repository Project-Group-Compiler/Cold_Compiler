Lexical Analysis for tests/test5.cold

Token               Lexeme                                  Line      Column    
--------------------------------------------------------------------------------
INT                 int                                     2         1         
IDENTIFIER          parent                                  2         5         
[                   [                                       2         11        
CONSTANT            20                                      2         12        
]                   ]                                       2         14        
,                   ,                                       2         15        
IDENTIFIER          size                                    2         17        
[                   [                                       2         21        
CONSTANT            20                                      2         22        
]                   ]                                       2         24        
;                   ;                                       2         25        
INT                 int                                     3         1         
IDENTIFIER          comp                                    3         5         
=                   =                                       3         10        
CONSTANT            0                                       3         12        
;                   ;                                       3         13        
VOID                void                                    5         1         
IDENTIFIER          init                                    5         6         
(                   (                                       5         10        
INT                 int                                     5         11        
IDENTIFIER          n                                       5         15        
)                   )                                       5         16        
{                   {                                       5         18        
IDENTIFIER          comp                                    6         5         
=                   =                                       6         10        
IDENTIFIER          n                                       6         12        
;                   ;                                       6         13        
FOR                 for                                     7         5         
(                   (                                       7         9         
INT                 int                                     7         10        
IDENTIFIER          i                                       7         14        
=                   =                                       7         16        
CONSTANT            0                                       7         18        
;                   ;                                       7         19        
IDENTIFIER          i                                       7         21        
LE_OP               <=                                      7         23        
IDENTIFIER          n                                       7         26        
;                   ;                                       7         27        
IDENTIFIER          i                                       7         29        
INC_OP              ++                                      7         30        
)                   )                                       7         32        
{                   {                                       7         34        
IDENTIFIER          parent                                  8         9         
[                   [                                       8         15        
IDENTIFIER          i                                       8         16        
]                   ]                                       8         17        
=                   =                                       8         19        
IDENTIFIER          i                                       8         21        
;                   ;                                       8         22        
IDENTIFIER          size                                    9         9         
[                   [                                       9         13        
IDENTIFIER          i                                       9         14        
]                   ]                                       9         15        
=                   =                                       9         17        
CONSTANT            1                                       9         19        
;                   ;                                       9         20        
}                   }                                       10        5         
}                   }                                       11        1         
INT                 int                                     13        1         
IDENTIFIER          get                                     13        5         
(                   (                                       13        8         
INT                 int                                     13        9         
IDENTIFIER          node                                    13        13        
)                   )                                       13        17        
{                   {                                       13        19        
IF                  if                                      14        5         
(                   (                                       14        8         
IDENTIFIER          node                                    14        9         
EQ_OP               ==                                      14        14        
IDENTIFIER          parent                                  14        17        
[                   [                                       14        23        
IDENTIFIER          node                                    14        24        
]                   ]                                       14        28        
)                   )                                       14        29        
RETURN              return                                  15        9         
IDENTIFIER          node                                    15        16        
;                   ;                                       15        20        
RETURN              return                                  16        5         
IDENTIFIER          parent                                  16        12        
[                   [                                       16        18        
IDENTIFIER          node                                    16        19        
]                   ]                                       16        23        
=                   =                                       16        25        
IDENTIFIER          get                                     16        27        
(                   (                                       16        30        
IDENTIFIER          parent                                  16        31        
[                   [                                       16        37        
IDENTIFIER          node                                    16        38        
]                   ]                                       16        42        
)                   )                                       16        43        
;                   ;                                       16        44        
}                   }                                       17        1         
VOID                void                                    19        1         
IDENTIFIER          unite                                   19        6         
(                   (                                       19        11        
INT                 int                                     19        12        
IDENTIFIER          u                                       19        16        
,                   ,                                       19        17        
INT                 int                                     19        19        
IDENTIFIER          v                                       19        23        
)                   )                                       19        24        
{                   {                                       19        26        
INT                 int                                     20        5         
IDENTIFIER          upu                                     20        9         
=                   =                                       20        13        
IDENTIFIER          get                                     20        15        
(                   (                                       20        18        
IDENTIFIER          u                                       20        19        
)                   )                                       20        20        
;                   ;                                       20        21        
INT                 int                                     21        5         
IDENTIFIER          upv                                     21        9         
=                   =                                       21        13        
IDENTIFIER          get                                     21        15        
(                   (                                       21        18        
IDENTIFIER          v                                       21        19        
)                   )                                       21        20        
;                   ;                                       21        21        
IF                  if                                      22        5         
(                   (                                       22        8         
IDENTIFIER          upu                                     22        9         
EQ_OP               ==                                      22        13        
IDENTIFIER          upv                                     22        16        
)                   )                                       22        19        
RETURN              return                                  22        21        
;                   ;                                       22        27        
IF                  if                                      23        5         
(                   (                                       23        8         
IDENTIFIER          size                                    23        9         
[                   [                                       23        13        
IDENTIFIER          upu                                     23        14        
]                   ]                                       23        17        
<                   <                                       23        19        
IDENTIFIER          size                                    23        21        
[                   [                                       23        25        
IDENTIFIER          upv                                     23        26        
]                   ]                                       23        29        
)                   )                                       23        30        
{                   {                                       23        31        
IDENTIFIER          upu                                     24        9         
=                   =                                       24        13        
IDENTIFIER          upu                                     24        15        
^                   ^                                       24        19        
IDENTIFIER          upv                                     24        21        
;                   ;                                       24        24        
IDENTIFIER          upv                                     25        9         
=                   =                                       25        13        
IDENTIFIER          upu                                     25        15        
^                   ^                                       25        19        
IDENTIFIER          upv                                     25        21        
;                   ;                                       25        24        
IDENTIFIER          upu                                     26        9         
=                   =                                       26        13        
IDENTIFIER          upu                                     26        15        
^                   ^                                       26        19        
IDENTIFIER          upv                                     26        21        
;                   ;                                       26        24        
}                   }                                       27        5         
IDENTIFIER          comp                                    28        5         
DEC_OP              --                                      28        9         
;                   ;                                       28        11        
IDENTIFIER          parent                                  29        5         
[                   [                                       29        11        
IDENTIFIER          upv                                     29        12        
]                   ]                                       29        15        
=                   =                                       29        17        
IDENTIFIER          upu                                     29        19        
;                   ;                                       29        22        
IDENTIFIER          size                                    30        5         
[                   [                                       30        9         
IDENTIFIER          upu                                     30        10        
]                   ]                                       30        13        
ADD_ASSIGN          +=                                      30        15        
IDENTIFIER          size                                    30        18        
[                   [                                       30        22        
IDENTIFIER          upv                                     30        23        
]                   ]                                       30        26        
;                   ;                                       30        27        
}                   }                                       31        1         
INT                 int                                     33        1         
IDENTIFIER          main                                    33        5         
(                   (                                       33        9         
)                   )                                       33        10        
{                   {                                       33        11        
INT                 int                                     36        5         
IDENTIFIER          n                                       36        9         
,                   ,                                       36        10        
IDENTIFIER          e                                       36        12        
;                   ;                                       36        13        
INT                 int                                     37        5         
IDENTIFIER          u                                       37        9         
,                   ,                                       37        10        
IDENTIFIER          v                                       37        12        
;                   ;                                       37        13        
IDENTIFIER          scanf                                   39        5         
(                   (                                       39        10        
STRING_LITERAL      "%d"                                    39        11        
,                   ,                                       39        15        
&                   &                                       39        16        
IDENTIFIER          n                                       39        17        
)                   )                                       39        18        
;                   ;                                       39        19        
IDENTIFIER          scanf                                   40        5         
(                   (                                       40        10        
STRING_LITERAL      "%d"                                    40        11        
,                   ,                                       40        15        
&                   &                                       40        16        
IDENTIFIER          e                                       40        17        
)                   )                                       40        18        
;                   ;                                       40        19        
IDENTIFIER          init                                    42        5         
(                   (                                       42        9         
IDENTIFIER          n                                       42        10        
)                   )                                       42        11        
;                   ;                                       42        12        
FOR                 for                                     44        5         
(                   (                                       44        8         
INT                 int                                     44        9         
IDENTIFIER          i                                       44        13        
=                   =                                       44        14        
CONSTANT            0                                       44        15        
;                   ;                                       44        16        
IDENTIFIER          i                                       44        17        
<                   <                                       44        18        
IDENTIFIER          e                                       44        19        
;                   ;                                       44        20        
IDENTIFIER          i                                       44        21        
INC_OP              ++                                      44        22        
)                   )                                       44        24        
{                   {                                       44        25        
IDENTIFIER          scanf                                   45        9         
(                   (                                       45        14        
STRING_LITERAL      "%d %d"                                 45        15        
,                   ,                                       45        22        
&                   &                                       45        23        
IDENTIFIER          u                                       45        24        
,                   ,                                       45        25        
&                   &                                       45        26        
IDENTIFIER          v                                       45        27        
)                   )                                       45        28        
;                   ;                                       45        29        
IDENTIFIER          unite                                   46        9         
(                   (                                       46        14        
IDENTIFIER          u                                       46        15        
,                   ,                                       46        16        
IDENTIFIER          v                                       46        17        
)                   )                                       46        18        
;                   ;                                       46        19        
IDENTIFIER          printf                                  47        9         
(                   (                                       47        15        
STRING_LITERAL      "No of connected component is %d\n"     47        16        
,                   ,                                       47        51        
IDENTIFIER          comp                                    47        52        
)                   )                                       47        56        
;                   ;                                       47        57        
}                   }                                       48        5         
}                   }                                       50        1         
