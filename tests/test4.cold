#define MAX_NODES 1000
#define INF 1000000000 

int n;                              
int e;                              
int capacity[MAX_NODES][MAX_NODES]; 
int flow[MAX_NODES][MAX_NODES];     
int color[MAX_NODES];               
int pred[MAX_NODES];                

int WHITE = 0;
int GRAY = 1;
int BLACK = 2;
int head, tail;
int q[MAX_NODES + 2];               

int min(int x, int y);
void enqueue(int x);
int dequeue(void);
int bfs(int start, int target);
int max_flow(int source, int sink);

int min(int x, int y) {
    return x < y ? x : y;  
}

void enqueue(int x) {
    q[tail] = x;
    tail++;
    color[x] = GRAY;
}

int dequeue(void) {
    int x = q[head];
    head++;
    color[x] = BLACK;
    return x;
}

int bfs(int start, int target) {
    int u, v;
    head = tail = 0;

    for (u = 0; u < n; u++) {
        color[u] = WHITE;
    }

    enqueue(start);
    pred[start] = -1;
    while (head != tail) {
        u = dequeue();
        for (v = 0; v < n; v++) {
            if (color[v] == WHITE && capacity[u][v] - flow[u][v] > 0) {
                enqueue(v);
                pred[v] = u;
            }
        }
    }
    return color[target] == BLACK;
}

int max_flow(int source, int sink) {
    int i, j, u;
    int max_flow = 0;
    int increment = INF;
    
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            flow[i][j] = 0;
        }
    }

    while (bfs(source, sink)) {
        for (u = n - 1; pred[u] >= 0; u = pred[u]) {
            increment = min(increment, capacity[pred[u]][u] - flow[pred[u]][u]);
        }
        
        for (u = n - 1; pred[u] >= 0; u = pred[u]) {
            flow[pred[u]][u] += increment;
            flow[u][pred[u]] -= increment;
        }
        
        max_flow += increment;
    }
    return max_flow;
}

int main() {
    int i, j;
    int s = 0;
    int t = n - 1;

    printf("\nEnter number of nodes and edges: \n");
    scanf("%d %d", &n, &e);
    
    printf("\nEnter the capacity matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &capacity[i][j]);
        }
    }

    printf("\nEnter Source(s) and Sink(t): \n");
    scanf("%d %d", &s, &t);

    printf("\nMax Flow : %d\n", max_flow(s, t));

    return 0;
}
